apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  labels:
    app: postgresql
spec:
  serviceName: {{ .Release.Name }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image }}"
          imagePullPolicy: {{ .Values.postgresql.pullPolicy }}
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          envFrom:
            - secretRef:
                name: {{ .Values.postgresql.secretName | default "postgresql-secrets" }}
          ports:
            - containerPort: 5432
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data/pgdata
          {{- end }}
          {{- if not .Values.postgresql.persistence.enabled }}
          volumes:
            - name: postgresql-data
              emptyDir: {}
          {{- end }}

  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        accessModes: [ "{{ .Values.postgresql.persistence.accessMode }}" ]
        storageClassName: "{{ .Values.postgresql.persistence.storageClass }}" 
        resources:
          requests:
            storage: "{{ .Values.postgresql.persistence.size }}"
  {{- end }}
